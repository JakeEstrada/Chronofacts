Table users {
  id int [pk, increment]
  username varchar(255) [unique, not null]
  password_hash varchar(255) [not null]
  email varchar(255)
  created_at datetime
}

Table timelines {
  id int [pk, increment]
  user_id int [not null, ref: > users.id]
  title varchar(255)
  start_date date
  end_date date
  description text
  created_at datetime
}

Table spans {
  id int [pk, increment]
  timeline_id int [not null, ref: > timelines.id]
  title varchar(255)
  start_date date
  end_date date
  description text
  created_at datetime
}

Table occurrences {
  id int [pk, increment]
  timeline_id int [not null, ref: > timelines.id]
  title varchar(255)
  date date
  description text
  created_at datetime
}

Table events {
  id int [pk, increment]
  title varchar(255)
  date date
  description text
  created_at datetime
}

Table timeline_events {
  id int [pk, increment]
  event_id int [not null, ref: > events.id]
  timeline_id int [not null, ref: > timelines.id]
  added_by_user_id int [ref: > users.id]
}

Table instances {
  id int [pk, increment]
  span_id int [ref: > spans.id]
  occurrence_id int [ref: > occurrences.id]
  event_id int [ref: > events.id]
  content text
  created_at datetime

  Note: "Either span_id, occurrence_id, or event_id is required (not more than one)."
}

Table media {
  id int [pk, increment]
  instance_id int [not null, ref: > instances.id]
  file_url varchar(255)
  file_type varchar(50) // e.g., "mp3", "mp4", "pdf", "jpg"
  uploaded_at datetime
}

Table media_chunks {
  id int [pk, increment]
  upload_id varchar(255) // UUID to identify the file being uploaded
  chunk_index int         // e.g., 0, 1, 2, ...
  data blob               // or file_path if storing temporarily on disk
  created_at datetime
}

using this syntaxc

CREATE TABLE timelines (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(id),
    title TEXT,
    description TEXT,
    start_date DATE,
    end_date DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

sudo -u postgres psql -d timeline_db -c "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO timeline_user;"
sudo -u postgres psql -d timeline_db -c "GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO timeline_user;"